name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest version
      id: get_version
      run: |
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          version=${GITHUB_REF#refs/tags/}
        else
          # Parse the latest tag and increment the patch version
          major=$(echo $latest_tag | cut -d. -f1 | sed 's/v//')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_patch=$((patch + 1))
          version="v$major.$minor.$new_patch"
        fi
        echo "VERSION=$version" >> $GITHUB_OUTPUT

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}},value=${{ steps.get_version.outputs.VERSION }}
          type=semver,pattern={{major}}.{{minor}},value=${{ steps.get_version.outputs.VERSION }}
          type=semver,pattern={{major}},value=${{ steps.get_version.outputs.VERSION }}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Create Git tag
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag ${{ steps.get_version.outputs.VERSION }}
        git push origin ${{ steps.get_version.outputs.VERSION }}